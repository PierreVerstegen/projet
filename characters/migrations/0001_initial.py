# Generated by Django 5.2.6 on 2025-10-16 08:35

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Effect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effect_name', models.CharField(max_length=200)),
                ('effect_description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Abilities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ability_name', models.CharField(max_length=200)),
                ('ability_source', models.CharField(choices=[('DND', 'Dungeons & Dragons'), ('CTHU', 'Call of Cthulhu'), ('BRIG', 'Brigandyne'), ('DCC', 'Dungeon Crawler Classic'), ('HMB', 'Homebrew system')], default='DND', max_length=10)),
                ('ability_description', models.TextField(blank=True, default='')),
                ('ability_class', models.CharField(max_length=200)),
                ('effect', models.ManyToManyField(blank=True, help_text='Effects possessed by this ability.', related_name='ability', to='characters.effect')),
            ],
            options={
                'db_table': 'abilities',
            },
        ),
        migrations.CreateModel(
            name='NPC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charac_name', models.CharField(max_length=100)),
                ('charac_class', models.CharField(max_length=100)),
                ('charac_lvl', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('charac_hp', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('charac_money', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('charac_model', models.CharField(choices=[('DND', 'Dungeons & Dragons'), ('CTHU', 'Call of Cthulhu'), ('BRIG', 'Brigandyne'), ('DCC', 'Dungeon Crawler Classic'), ('HMB', 'Homebrew system')], default='DND', max_length=10)),
                ('charac_bio', models.TextField(blank=True, default='')),
                ('is_hostile', models.BooleanField(default=False)),
                ('faction', models.CharField(blank=True, max_length=100)),
                ('abilities', models.ManyToManyField(blank=True, help_text='Abilities possessed by this NPC.', related_name='npc', to='characters.abilities')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_characters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'npcs',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charac_name', models.CharField(max_length=100)),
                ('charac_class', models.CharField(max_length=100)),
                ('charac_lvl', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('charac_hp', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('charac_money', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('charac_model', models.CharField(choices=[('DND', 'Dungeons & Dragons'), ('CTHU', 'Call of Cthulhu'), ('BRIG', 'Brigandyne'), ('DCC', 'Dungeon Crawler Classic'), ('HMB', 'Homebrew system')], default='DND', max_length=10)),
                ('charac_bio', models.TextField(blank=True, default='')),
                ('experience_points', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('abilities', models.ManyToManyField(blank=True, help_text='Abilities possessed by this player.', related_name='player', to='characters.abilities')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_characters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'players',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_dnd', models.JSONField(blank=True, default=dict)),
                ('model_cthulhu', models.JSONField(blank=True, default=dict)),
                ('model_brig', models.JSONField(blank=True, default=dict)),
                ('model_dcc', models.JSONField(blank=True, default=dict)),
                ('model_homebrew', models.JSONField(blank=True, default=dict)),
                ('npcs', models.ManyToManyField(blank=True, help_text='NPC in the game.', related_name='attributes', to='characters.npc')),
                ('players', models.ManyToManyField(blank=True, help_text='Players in the game.', related_name='attributes', to='characters.player')),
            ],
        ),
    ]
